%% Quality Assurance metrics and images
% Please inspect these prior to interpreting any results! Errors in
% manually or automatically generated labelmaps can lead to incorrect
% unfolding. Use this tool to ensure measures are correct.

try
    sampleprefix = out_filename; %sometimes used this as variable name, catch it just in case
end
load([sampleprefix 'unfold.mat']);%, '-regexp', '^(?!sampleprefix)\w');
load([sampleprefix 'surf.mat'], '-regexp', '^(?!sampleprefix)\w');
T2w = ls([sampleprefix 'img.nii.gz']);
T2w(end) = [];
T2w = load_untouch_nii(T2w);
T2w = T2w.img;

% load generic
load('misc/BigBrain_ManualSubfieldsUnfolded.mat');
subfields_avg = imresize(subfields_avg,0.5,'nearest');
load('../Hippocampal_AutoTop/misc/itkColours.mat');
itkColours = itkColours/255;
itkColours = [0 0 0; itkColours];

%% Midsurf mesh

Vrec = CosineRep_2Dsurf(Vmid,64,0.005); 
[i_L,j_L,k_L]=ind2sub(sz,idxgm);
t = ~ismember(round(Vrec),[i_L,j_L,k_L]);
Vrec(t) = nan;

% view mesh in 3D
% plot
figure;
v = reshape(Vrec,[APres*PDres,3]); 
p = patch('Faces',F,'Vertices',v,'FaceVertexCData',subfields_avg(:));
p.FaceColor = 'flat';
p.LineStyle = 'none';
axis equal tight off;
material dull;
light;
caxis([0 8]); colormap(itkColours);

%% Inspect Anterior-Posterior gradient

sagSlice = 64;
corSlice = [1:256];

alpha3d = zeros(sz);
alpha3d(idxgm) = 1;
grad3d = alpha3d;
grad3d(idxgm) = Laplace_AP;
% set 95% colourmap window
t = sort(T2w(:));
t(isnan(t)) = [];
window = [t(round(length(t)*.05)) t(round(length(t)*.95))];

figure;
imagesc(squeeze(T2w(sagSlice,corSlice,:))');
colormap('gray');
caxis(window);
set(gca,'ydir','normal');
axis equal tight off;

% figure with overlay
f1 = figure; 
h1 = axes;
t2 = imagesc(h1,squeeze(T2w(sagSlice,corSlice,:))');
colormap(h1,'gray');
caxis(window);
set(h1,'ydir','normal');
axis equal tight off;
h2 = axes;
ap = imagesc(squeeze(grad3d(sagSlice,corSlice,:))',...
    'alphadata',squeeze(alpha3d(sagSlice,corSlice,:))');
caxis(h2,[0 1]);
set(h2,'color','none','visible','off')
colormap(h2,'parula');
set(h2,'ydir','normal');
linkaxes([h1 h2]);
axis equal tight off;

%% plot extracted features

featureview(streamlengths,Vrec,F,1,[outprefix ');
featureview(GI,Vrec,F,1);
featureview(qMap,Vrec,F,1);
